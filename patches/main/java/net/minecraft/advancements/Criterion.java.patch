--- a/main/java/net/minecraft/advancements/Criterion.java
+++ b/main/java/net/minecraft/advancements/Criterion.java
@@ -6,6 +6,7 @@
 import com.google.gson.JsonSyntaxException;
 import java.util.Map;
 import java.util.Map.Entry;
+import java.util.Objects;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.critereon.DeserializationContext;
 import net.minecraft.advancements.critereon.SerializationContext;
@@ -24,21 +25,21 @@
       this.f_11412_ = null;
    }
 
-   public void m_11423_(FriendlyByteBuf p_11424_) {
+   public void m_11423_() {
    }
 
    public static Criterion m_11417_(JsonObject p_11418_, DeserializationContext p_11419_) {
       ResourceLocation resourcelocation = new ResourceLocation(GsonHelper.m_13906_(p_11418_, "trigger"));
       CriterionTrigger<?> criteriontrigger = CriteriaTriggers.m_10597_(resourcelocation);
       if (criteriontrigger == null) {
-         throw new JsonSyntaxException("Invalid criterion trigger: " + resourcelocation);
+         throw new JsonSyntaxException("無効な基準トリガー: " + resourcelocation);
       } else {
          CriterionTriggerInstance criteriontriggerinstance = criteriontrigger.m_5868_(GsonHelper.m_13841_(p_11418_, "conditions", new JsonObject()), p_11419_);
          return new Criterion(criteriontriggerinstance);
       }
    }
 
-   public static Criterion m_11429_(FriendlyByteBuf p_11430_) {
+   public static Criterion m_11429_() {
       return new Criterion();
    }
 
@@ -57,7 +58,7 @@
       int i = p_11432_.m_130242_();
 
       for(int j = 0; j < i; ++j) {
-         map.put(p_11432_.m_130136_(32767), m_11429_(p_11432_));
+         map.put(p_11432_.m_130136_(32767), m_11429_());
       }
 
       return map;
@@ -68,7 +69,7 @@
 
       for(Entry<String, Criterion> entry : p_11421_.entrySet()) {
          p_11422_.m_130070_(entry.getKey());
-         entry.getValue().m_11423_(p_11422_);
+         entry.getValue().m_11423_();
       }
 
    }
@@ -80,7 +81,7 @@
 
    public JsonElement m_11425_() {
       JsonObject jsonobject = new JsonObject();
-      jsonobject.addProperty("trigger", this.f_11412_.m_7294_().toString());
+      jsonobject.addProperty("trigger", Objects.requireNonNull(this.f_11412_).m_7294_().toString());
       JsonObject jsonobject1 = this.f_11412_.m_7683_(SerializationContext.f_64768_);
       if (jsonobject1.size() != 0) {
          jsonobject.add("conditions", jsonobject1);
