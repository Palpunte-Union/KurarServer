--- a/main/java/net/minecraft/core/Registry.java
+++ b/main/java/net/minecraft/core/Registry.java
@@ -303,15 +303,15 @@
    public static <T extends WritableRegistry<?>> void m_122969_(WritableRegistry<T> p_122970_) {
       p_122970_.forEach((p_122973_) -> {
          if (p_122973_.m_6566_().isEmpty()) {
-            f_122894_.error("Registry '{}' was empty after loading", (Object)p_122970_.m_7981_(p_122973_));
+            f_122894_.error("ロード後にレジストリ '{}' が空でした", (Object)p_122970_.m_7981_(p_122973_));
             if (SharedConstants.f_136183_) {
-               throw new IllegalStateException("Registry: '" + p_122970_.m_7981_(p_122973_) + "' is empty, not allowed, fix me!");
+               throw new IllegalStateException("レジストリ: '" + p_122970_.m_7981_(p_122973_) + "' は空です、これは許可されていません、直してください!");
             }
          }
 
          if (p_122973_ instanceof DefaultedRegistry) {
             ResourceLocation resourcelocation = ((DefaultedRegistry)p_122973_).m_122315_();
-            Validate.notNull(p_122973_.m_7745_(resourcelocation), "Missing default of DefaultedMappedRegistry: " + resourcelocation);
+            Validate.notNull(p_122973_.m_7745_(resourcelocation), "DefaultedMappedRegistryのデフォルトがありません: " + resourcelocation);
          }
 
       });
@@ -356,19 +356,19 @@
    public <U> DataResult<Pair<T, U>> decode(DynamicOps<U> p_123016_, U p_123017_) {
       return p_123016_.compressMaps() ? p_123016_.getNumberValue(p_123017_).flatMap((p_122975_) -> {
          T t = this.m_7942_(p_122975_.intValue());
-         return t == null ? DataResult.error("Unknown registry id: " + p_122975_) : DataResult.success(t, this.m_6228_(t));
+         return t == null ? DataResult.error("不明なレジストリID: " + p_122975_) : DataResult.success(t, this.m_6228_(t));
       }).map((p_122952_) -> {
          return Pair.of((T)p_122952_, p_123016_.empty());
       }) : ResourceLocation.f_135803_.decode(p_123016_, p_123017_).flatMap((p_122949_) -> {
          T t = this.m_7745_(p_122949_.getFirst());
-         return t == null ? DataResult.error("Unknown registry key: " + p_122949_.getFirst()) : DataResult.success(Pair.of(t, p_122949_.getSecond()), this.m_6228_(t));
+         return t == null ? DataResult.error("不明なレジストリキー: " + p_122949_.getFirst()) : DataResult.success(Pair.of(t, p_122949_.getSecond()), this.m_6228_(t));
       });
    }
 
    public <U> DataResult<U> encode(T p_123020_, DynamicOps<U> p_123021_, U p_123022_) {
       ResourceLocation resourcelocation = this.m_7981_(p_123020_);
       if (resourcelocation == null) {
-         return DataResult.error("Unknown registry element " + p_123020_);
+         return DataResult.error("不明なレジストリ要素 " + p_123020_);
       } else {
          return p_123021_.compressMaps() ? p_123021_.mergeToPrimitive(p_123022_, p_123021_.createInt(this.m_7447_(p_123020_))).setLifecycle(this.f_122893_) : p_123021_.mergeToPrimitive(p_123022_, p_123021_.createString(resourcelocation.toString())).setLifecycle(this.f_122893_);
       }
@@ -404,7 +404,7 @@
    public T m_123013_(ResourceKey<T> p_123014_) {
       T t = this.m_6246_(p_123014_);
       if (t == null) {
-         throw new IllegalStateException("Missing: " + p_123014_);
+         throw new IllegalStateException("行方不明: " + p_123014_);
       } else {
          return t;
       }
@@ -434,7 +434,7 @@
       BuiltinRegistries.m_123870_();
       f_122834_.forEach((p_123004_, p_123005_) -> {
          if (p_123005_.get() == null) {
-            f_122894_.error("Unable to bootstrap registry '{}'", (Object)p_123004_);
+            f_122894_.error("レジストリ '{}'をブートストラップできません", (Object)p_123004_);
          }
 
       });
